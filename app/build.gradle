apply plugin: 'com.android.application'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'org.sonarqube'

android {
  compileSdkVersion 28
  buildToolsVersion "28.0.3"

  defaultConfig {
    applicationId "com.chusobadenas.boilerplatecleanarchitecture"
    minSdkVersion 19
    targetSdkVersion 28
    versionCode 5
    versionName "2.1"
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    warning 'InvalidPackage'
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  final BUTTERKNIFE_VERSION = '9.0.0' // 10.1.0
  final DAGGER_VERSION = '2.21'
  final EASYMOCK_VERSION = '3.5'      // 4.0.2
  final GLIDE_VERSION = '4.9.0'
  final JSR250_VERSION = '1.0'
  final JUNIT_VERSION = '4.12'
  final MOCKITO_VERSION = '1.10.19'   // 2.25.0
  final OKHTTP3_VERSION = '3.14.0'
  final PLAY_SERVICES_VERSION = '16.1.0'
  final POWERMOCK_VERSION = '1.6.6'
  final RETROFIT_VERSION = '2.5.0'
  final ROBOLECTRIC_VERSION = '3.5.1' // 4.2
  final ROBOLECTRIC_SHADOWS_VERSION = '3.4-rc2'
  final RXANDROID_VERSION = '2.1.1'
  final RXJAVA_VERSION = '2.2.7'
  final TIMBER_VERSION = '4.7.1'
  final SUPPORT_LIBRARY_VERSION = '28.0.0'

  implementation fileTree(dir: 'libs', include: ['*.jar'])

  annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
  annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
  annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
  annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

  implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:animated-vector-drawable:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:support-media-compat:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:percent:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
  implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
  implementation "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
  implementation "com.google.dagger:dagger:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
  implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
  implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
  implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP3_VERSION"
  implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

  implementation "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
  implementation "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"

  compileOnly "javax.annotation:jsr250-api:$JSR250_VERSION"

  // Test Dependencies
  androidTestImplementation "junit:junit:$JUNIT_VERSION"
  testImplementation "junit:junit:$JUNIT_VERSION"
  testImplementation "org.easymock:easymock:$EASYMOCK_VERSION"
  testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
  testImplementation "org.powermock:powermock-api-mockito:$POWERMOCK_VERSION"
  testImplementation "org.powermock:powermock-api-easymock:$POWERMOCK_VERSION"
  testImplementation "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"
  testImplementation "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
  testImplementation "org.robolectric:shadows-support-v4:$ROBOLECTRIC_SHADOWS_VERSION"
}

cobertura {
  auxiliaryClasspath = files("${project.buildDir}/intermediates/classes/debug")
  coverageFormats = ['xml']
}

sonarqube {
  properties {
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.projectName", "Boilerplate Clean Architecture Android"
    property "sonar.projectKey", "com.chusobadenas.boilerplatecleanarchitecture:boilerplatecleanarchitecture-android"
    property "sonar.projectVersion", "2.1"
    property "sonar.java.libraries", project.android.applicationVariants.toList().first().javaCompile.classpath
    property "sonar.sources", "."
    property "sonar.exclusions", "build/**,src/androidTest/java/**,src/test/java/**"
    property "sonar.tests", "src/test/java"
    property "sonar.junit.reportsPath", "${project.buildDir}/test-results/testDebugUnitTest/debug"
    property "sonar.cobertura.reportPath", "${project.buildDir}/reports/cobertura/coverage.xml"
    property "sonar.android.lint.report", "${project.buildDir}/outputs/lint-results-debug.xml"
    property "sonar.java.binaries", "${project.buildDir}/intermediates/classes/debug"
    property "sonar.java.test.binaries", "${project.buildDir}/intermediates/classes/test/debug"
    property "sonar.scm.url", "https://bitbucket.org/chusobadenas/clean-architecture-project"
    property "sonar.scm.enabled", "true"
  }
}
